//Maximum Subarray Sum 
//Using Kadane's Algorithm 
//Time Complexity O(n)
#include <bits/stdc++.h>

using namespace std;

int maxSubArraySum(int arr[],int n)
{
    int maxSum =0 ;
    int currSum=0;
    for(int i=0;i<n;i++)
    {
        currSum = currSum +arr[i];
        if(currSum>maxSum)
        {
            maxSum=currSum;
        }
        if(currSum<0)
        {
            currSum=0;
        }

    }
    return maxSum;
}
int main()
{
    int arr[] = {5,-4,-2,6,-1};
    int n = sizeof(arr)/sizeof(arr[0]);
    int maxsum = maxSubArraySum(arr, n);
    cout << "Maximum subarray sum is " << maxsum;

    return 0;
}
